{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","index.tsx","App.tsx"],"names":["MovieCard","props","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","query","setQuery","newMovie","setNewMovie","isError","setError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onChangeHandler","onClick","fetch","then","response","json","newMovieApi","Title","Plot","Poster","imdbID","Response","ReactDOM","render","data","setMovies","find","document","getElementById"],"mappings":"4wEAKaA,G,kBAAuB,SAACC,GAAW,IAE5CC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,QAGF,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aChCGK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SCA3BG,G,MAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAG1BC,mBAAS,IAHiB,mBAG7CC,EAH6C,KAGtCC,EAHsC,OAIpBF,mBAAuB,MAJH,mBAI7CG,EAJ6C,KAInCC,EAJmC,OAKxBJ,oBAAS,GALe,mBAK7CK,EAL6C,KAKpCC,EALoC,KA2DpD,OACE,oCACE,0BAAMlB,UAAU,aAAamB,SAhBZ,SAACC,GACpBA,EAAMC,iBAEFN,GACFJ,EAASI,GACTD,EAAS,IACTI,GAAS,GACTF,EAAY,OAEZE,GAAS,KAQP,yBAAKlB,UAAU,SACb,2BAAOA,UAAU,QAAQsB,QAAQ,eAAjC,eAIA,yBAAKtB,UAAU,WACb,2BACEuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZzB,UAAS,gBAAWiB,EAAU,YAAc,IAC5CS,MAAOb,EACPc,SAAU,SAAAP,GAAK,OAnEH,SAACA,GAA0C,IACzDQ,EAAWR,EAAXQ,OAERd,EAASc,EAAOF,OAChBR,GAAS,GA+DoBW,CAAgBT,OAIvC,uBAAGpB,UAAU,kBACViB,EAAU,uCAA0C,KAIzD,yBAAKjB,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,kBACV8B,QA1EY,WACtBC,MAdU,6CAcGlB,GACVmB,MAAK,SAAAC,GAAQ,OACZA,EAASC,UAEVF,MAAK,SAAAG,GAAgB,IAEXvC,EAKLuC,EALFC,MACMvC,EAIJsC,EAJFE,KACQvC,EAGNqC,EAHFG,OACQ7B,EAEN0B,EAFFI,OAIe,SAFbJ,EADFK,SAaAxB,EARc,CACZpB,QACAC,cACAC,SACAW,SACAV,QAjCO,8BA2BkBU,IAW3BS,GAAS,QA6CP,iBASF,yBAAKlB,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,qBAFZ,sBAUN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCe,EAAW,kBAAC,EAAcA,GAAe,O,OCpHlD0B,IAASC,OAAO,mBCCO,WAAO,IAAD,EACC9B,mBAAkB+B,GADnB,mBACpBtC,EADoB,KACZuC,EADY,KAW3B,OACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAdA,SAACI,GACEV,EAAOwC,MAAK,SAAAtC,GAAK,OAAIA,EAAME,SAAWM,EAASN,WAG/DmC,EAAU,GAAD,mBAAKvC,GAAL,CAAaU,YDRZ,MAAS+B,SAASC,eAAe,W","file":"static/js/main.48cc0507.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: FC<Props> = (props) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, {\n  FC,\n  ChangeEvent,\n  useState,\n  FormEvent,\n} from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie(movie: Movie): void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const URL = 'https://www.omdbapi.com/?apikey=6cf099a&t=';\n  const IMDB_URL = 'https://www.imdb.com/title/';\n  const [query, setQuery] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isError, setError] = useState(false);\n\n  const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setQuery(target.value);\n    setError(false);\n  };\n\n  const handleFindMovie = () => {\n    fetch((URL + query))\n      .then(response => (\n        response.json()\n      ))\n      .then(newMovieApi => {\n        const {\n          Title: title,\n          Plot: description,\n          Poster: imgUrl,\n          imdbID: imdbId,\n          Response,\n        } = newMovieApi;\n\n        if (Response === 'True') {\n          const imdbUrl = IMDB_URL + imdbId;\n          const movie = {\n            title,\n            description,\n            imgUrl,\n            imdbId,\n            imdbUrl,\n          };\n\n          setNewMovie(movie);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (newMovie) {\n      addMovie(newMovie);\n      setQuery('');\n      setError(false);\n      setNewMovie(null);\n    } else {\n      setError(true);\n    }\n  };\n\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${isError ? 'is-danger' : ''}`}\n              value={query}\n              onChange={event => onChangeHandler(event)}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {isError ? 'Can\\'t find a movie with such a title' : ''}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie ? <MovieCard {...newMovie} /> : ''}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addMovie = (newMovie: Movie) => {\n    const duplicate = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!duplicate) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}